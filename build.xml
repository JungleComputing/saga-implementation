<project name="SAGA" default="build" basedir=".">

    <description>
	Build file for the Java SAGA Implementation.
    </description>

    <!-- Global properties -->

    <property name="version" value="-1.1" />
    <property name="tmp" location="tmp" />
    <property name="lib" location="lib" />
    <property name="jar" location="${lib}/saga-impl${version}.jar" />
    <property name="sources-filename" value="saga-impl${version}" />
    <property name="prefix" value="build/prefix" />

    <target name="init" depends="clean">
	<!-- Create the time stamp -->
	<tstamp />

	<!-- Create the build directory structure used by compile -->
	<mkdir dir="${tmp}" />

    </target>

    <path id="external.jars">
        <fileset dir="external">
            <include name="*.jar" />
        </fileset>
    </path>

    <target name="compile" depends="init" description="compile the source ">
	<!-- Compile the java code from src into ${tmp} -->

    	<javac source="1.5" target="1.5" srcdir="src" destdir="${tmp}" debug="on" >
	    <classpath refid="external.jars" />
    	    <compilerarg value="-Xlint:unchecked"/>
    	</javac>

	<!-- Copy license, so that it will end up in the jar. -->
	<copy file="LICENSE.txt" todir="${tmp}"/>

	<!-- Copy saga.properties, so that it will end up in the jar. -->
	<copy file="saga.properties" todir="${tmp}"/>

    </target>

    <target name="build-engine" depends="compile" description="build the SAGA engine">
	<!-- Create the lib directory -->
	<mkdir dir="${lib}" />

	<!-- Put everything in ${tmp} into the jar file -->
	<jar jarfile="${jar}" basedir="${tmp}" />

	<!-- And delete the build dir -->
	<delete dir="${tmp}" />

	<copy todir="lib">
	    <fileset dir="external"/>
	</copy>
    </target>

    <target name="build" depends="build-engine" description="build SAGA">
	<!-- Build adaptors. -->
	<ant inheritAll="false" dir="adaptors" target="build"/>

	<!-- Build demo. -->
	<ant inheritAll="false" dir="demo" target="build"/>

	<!-- Build tests. -->
	<ant inheritAll="false" dir="test" target="build"/>

    <!-- Build benchmarks. -->
    <ant inheritAll="false" dir="benchmarks" target="build"/>

    <!-- Build apps. -->
	<ant inheritAll="false" dir="apps" target="build"/>
    </target>

    <target name="install-engine" depends="build-engine">
	<copy todir="${prefix}/share/doc/saga/engine-java" file="LICENSE.txt" />
	<copy todir="${prefix}/share/doc/saga/engine-java" file="README.txt" />
	<copy todir="${prefix}/share/doc/saga/engine-java" file="HISTORY.txt" />
	<copy todir="${prefix}/etc/saga/java" file="log4j.properties" />
	<copy todir="${prefix}/etc/saga/java" file="saga.properties" />
	<copy todir="${prefix}/lib" >
	    <fileset dir="${lib}/" includes="saga-impl*.jar, log4j*.jar, slf4j*.jar" />
	</copy>
	<mkdir dir="${prefix}/lib/adaptors" />
    </target>

    <target name="doc" description="Create manuals">
        <ant dir="doc" inheritAll="false" />
    </target>

    <target name="clean" description="clean up">
	<delete dir="${lib}" />
	<delete dir="${tmp}" />
	<delete dir="${prefix}" />
	<!-- Clean adaptors. -->
	<ant inheritAll="false" dir="adaptors" target="clean"/>
	<!-- Clean demo. -->
	<ant inheritAll="false" dir="demo" target="clean"/>
	<!-- Clean tests. -->
	<ant inheritAll="false" dir="test" target="clean"/>
	<!-- Clean apps. -->
	<ant inheritAll="false" dir="apps" target="clean"/>
	<!-- Clean doc. -->
	<ant inheritAll="false" dir="doc" target="clean"/>
    </target>

    <target name="zip" depends="build,doc">
        <delete file="saga-impl${version}-binary.zip" />
	<delete file="sources/${sources-filename}.zip" />

	<zip destfile="sources/${sources-filename}.zip">
            <zipfileset dir="src" includes="**/*.java" prefix="${sources-filename}" />
	    <zipfileset dir="adaptors/Archive/src" includes="**/*.java" prefix="${sources-filename}" />
	    <zipfileset dir="adaptors/Fuse/src" includes="**/*.java" prefix="${sources-filename}" />
	    <zipfileset dir="adaptors/Generic/src" includes="**/*.java" prefix="${sources-filename}" />
	    <zipfileset dir="adaptors/Gridsam/src" includes="**/*.java" prefix="${sources-filename}" />
	    <zipfileset dir="adaptors/JavaGat/src" includes="**/*.java" prefix="${sources-filename}" />
	    <zipfileset dir="adaptors/Local/src" includes="**/*.java" prefix="${sources-filename}" />
	    <zipfileset dir="adaptors/Socket/src" includes="**/*.java" prefix="${sources-filename}" />
	    <zipfileset dir="adaptors/XMLRPC/src" includes="**/*.java" prefix="${sources-filename}" />
            <zipfileset dir="." includes="LICENSE.txt" prefix="${sources-filename}" />
        </zip>

        <zip destfile="saga-impl${version}-binary.zip">
            <zipfileset dir="."
                        prefix="saga-impl${version}"
			includes="doc/**,lib/**,demo/**,test/**,licenses/**,LICENSE.txt,README.txt,HISTORY.txt,log4j.properties,saga.properties,sources/**"
			excludes="doc/build.xml,doc/usersguide.tex,demo/demo?,test/run*"/>
            <zipfileset dir="."
                        prefix="saga-impl${version}"
			filemode="755"
			includes="bin/**" />
            <zipfileset dir="."
                        prefix="saga-impl${version}"
			filemode="755"
			includes="demo/demo?" />
            <zipfileset dir="."
                        prefix="saga-impl${version}"
			filemode="755"
			includes="test/run*" />
        </zip>

	<delete file="sources/${sources-filename}.zip" />
    </target>

    <target name="distclean" depends="clean">
        <delete file="saga-impl${version}.zip" />
	<delete file="sources/${sources-filename}.zip" />
    </target>
    
</project>
